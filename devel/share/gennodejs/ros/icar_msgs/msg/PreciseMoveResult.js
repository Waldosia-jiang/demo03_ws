// Auto-generated. Do not edit!

// (in-package icar_msgs.msg)


"use strict";

const _serializer = _ros_msg_utils.Serialize;
const _arraySerializer = _serializer.Array;
const _deserializer = _ros_msg_utils.Deserialize;
const _arrayDeserializer = _deserializer.Array;
const _finder = _ros_msg_utils.Find;
const _getByteLength = _ros_msg_utils.getByteLength;

//-----------------------------------------------------------

class PreciseMoveResult {
  constructor(initObj={}) {
    if (initObj === null) {
      // initObj === null is a special case for deserialization where we don't initialize fields
      this.done = null;
      this.current_target_x = null;
      this.current_target_y = null;
      this.current_target_theta = null;
      this.error = null;
    }
    else {
      if (initObj.hasOwnProperty('done')) {
        this.done = initObj.done
      }
      else {
        this.done = false;
      }
      if (initObj.hasOwnProperty('current_target_x')) {
        this.current_target_x = initObj.current_target_x
      }
      else {
        this.current_target_x = 0.0;
      }
      if (initObj.hasOwnProperty('current_target_y')) {
        this.current_target_y = initObj.current_target_y
      }
      else {
        this.current_target_y = 0.0;
      }
      if (initObj.hasOwnProperty('current_target_theta')) {
        this.current_target_theta = initObj.current_target_theta
      }
      else {
        this.current_target_theta = 0.0;
      }
      if (initObj.hasOwnProperty('error')) {
        this.error = initObj.error
      }
      else {
        this.error = '';
      }
    }
  }

  static serialize(obj, buffer, bufferOffset) {
    // Serializes a message object of type PreciseMoveResult
    // Serialize message field [done]
    bufferOffset = _serializer.bool(obj.done, buffer, bufferOffset);
    // Serialize message field [current_target_x]
    bufferOffset = _serializer.float64(obj.current_target_x, buffer, bufferOffset);
    // Serialize message field [current_target_y]
    bufferOffset = _serializer.float64(obj.current_target_y, buffer, bufferOffset);
    // Serialize message field [current_target_theta]
    bufferOffset = _serializer.float64(obj.current_target_theta, buffer, bufferOffset);
    // Serialize message field [error]
    bufferOffset = _serializer.string(obj.error, buffer, bufferOffset);
    return bufferOffset;
  }

  static deserialize(buffer, bufferOffset=[0]) {
    //deserializes a message object of type PreciseMoveResult
    let len;
    let data = new PreciseMoveResult(null);
    // Deserialize message field [done]
    data.done = _deserializer.bool(buffer, bufferOffset);
    // Deserialize message field [current_target_x]
    data.current_target_x = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [current_target_y]
    data.current_target_y = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [current_target_theta]
    data.current_target_theta = _deserializer.float64(buffer, bufferOffset);
    // Deserialize message field [error]
    data.error = _deserializer.string(buffer, bufferOffset);
    return data;
  }

  static getMessageSize(object) {
    let length = 0;
    length += _getByteLength(object.error);
    return length + 29;
  }

  static datatype() {
    // Returns string type for a message object
    return 'icar_msgs/PreciseMoveResult';
  }

  static md5sum() {
    //Returns md5sum for a message object
    return '3f63462f1fc4c7457f5cce6d87a41804';
  }

  static messageDefinition() {
    // Returns full string definition for message
    return `
    # ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
    #define the result
    bool done
    float64 current_target_x
    float64 current_target_y
    float64 current_target_theta
    string error
    
    `;
  }

  static Resolve(msg) {
    // deep-construct a valid message object instance of whatever was passed in
    if (typeof msg !== 'object' || msg === null) {
      msg = {};
    }
    const resolved = new PreciseMoveResult(null);
    if (msg.done !== undefined) {
      resolved.done = msg.done;
    }
    else {
      resolved.done = false
    }

    if (msg.current_target_x !== undefined) {
      resolved.current_target_x = msg.current_target_x;
    }
    else {
      resolved.current_target_x = 0.0
    }

    if (msg.current_target_y !== undefined) {
      resolved.current_target_y = msg.current_target_y;
    }
    else {
      resolved.current_target_y = 0.0
    }

    if (msg.current_target_theta !== undefined) {
      resolved.current_target_theta = msg.current_target_theta;
    }
    else {
      resolved.current_target_theta = 0.0
    }

    if (msg.error !== undefined) {
      resolved.error = msg.error;
    }
    else {
      resolved.error = ''
    }

    return resolved;
    }
};

module.exports = PreciseMoveResult;
